# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: echo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='echo.proto',
  package='grpc.gateway.testing',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\necho.proto\x12\x14grpc.gateway.testing\x1a\x1egoogle/protobuf/duration.proto\"\x07\n\x05\x45mpty\"\x1e\n\x0b\x45\x63hoRequest\x12\x0f\n\x07message\x18\x01 \x01(\t\"6\n\x0c\x45\x63hoResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x15\n\rmessage_count\x18\x02 \x01(\x05\"y\n\x1aServerStreamingEchoRequest\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x15\n\rmessage_count\x18\x02 \x01(\x05\x12\x33\n\x10message_interval\x18\x03 \x01(\x0b\x32\x19.google.protobuf.Duration\".\n\x1bServerStreamingEchoResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"-\n\x1a\x43lientStreamingEchoRequest\x12\x0f\n\x07message\x18\x01 \x01(\t\"4\n\x1b\x43lientStreamingEchoResponse\x12\x15\n\rmessage_count\x18\x01 \x01(\x05\x32\xb0\x06\n\x0b\x45\x63hoService\x12M\n\x04\x45\x63ho\x12!.grpc.gateway.testing.EchoRequest\x1a\".grpc.gateway.testing.EchoResponse\x12T\n\tEchoAbort\x12!.grpc.gateway.testing.EchoRequest\x1a\".grpc.gateway.testing.EchoResponse\"\x00\x12@\n\x04NoOp\x12\x1b.grpc.gateway.testing.Empty\x1a\x1b.grpc.gateway.testing.Empty\x12|\n\x13ServerStreamingEcho\x12\x30.grpc.gateway.testing.ServerStreamingEchoRequest\x1a\x31.grpc.gateway.testing.ServerStreamingEchoResponse0\x01\x12\x83\x01\n\x18ServerStreamingEchoAbort\x12\x30.grpc.gateway.testing.ServerStreamingEchoRequest\x1a\x31.grpc.gateway.testing.ServerStreamingEchoResponse\"\x00\x30\x01\x12|\n\x13\x43lientStreamingEcho\x12\x30.grpc.gateway.testing.ClientStreamingEchoRequest\x1a\x31.grpc.gateway.testing.ClientStreamingEchoResponse(\x01\x12[\n\x0e\x46ullDuplexEcho\x12!.grpc.gateway.testing.EchoRequest\x1a\".grpc.gateway.testing.EchoResponse(\x01\x30\x01\x12[\n\x0eHalfDuplexEcho\x12!.grpc.gateway.testing.EchoRequest\x1a\".grpc.gateway.testing.EchoResponse(\x01\x30\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,])




_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='grpc.gateway.testing.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=75,
)


_ECHOREQUEST = _descriptor.Descriptor(
  name='EchoRequest',
  full_name='grpc.gateway.testing.EchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='grpc.gateway.testing.EchoRequest.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=77,
  serialized_end=107,
)


_ECHORESPONSE = _descriptor.Descriptor(
  name='EchoResponse',
  full_name='grpc.gateway.testing.EchoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='grpc.gateway.testing.EchoResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message_count', full_name='grpc.gateway.testing.EchoResponse.message_count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=163,
)


_SERVERSTREAMINGECHOREQUEST = _descriptor.Descriptor(
  name='ServerStreamingEchoRequest',
  full_name='grpc.gateway.testing.ServerStreamingEchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='grpc.gateway.testing.ServerStreamingEchoRequest.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message_count', full_name='grpc.gateway.testing.ServerStreamingEchoRequest.message_count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message_interval', full_name='grpc.gateway.testing.ServerStreamingEchoRequest.message_interval', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=165,
  serialized_end=286,
)


_SERVERSTREAMINGECHORESPONSE = _descriptor.Descriptor(
  name='ServerStreamingEchoResponse',
  full_name='grpc.gateway.testing.ServerStreamingEchoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='grpc.gateway.testing.ServerStreamingEchoResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=288,
  serialized_end=334,
)


_CLIENTSTREAMINGECHOREQUEST = _descriptor.Descriptor(
  name='ClientStreamingEchoRequest',
  full_name='grpc.gateway.testing.ClientStreamingEchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='grpc.gateway.testing.ClientStreamingEchoRequest.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=336,
  serialized_end=381,
)


_CLIENTSTREAMINGECHORESPONSE = _descriptor.Descriptor(
  name='ClientStreamingEchoResponse',
  full_name='grpc.gateway.testing.ClientStreamingEchoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message_count', full_name='grpc.gateway.testing.ClientStreamingEchoResponse.message_count', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=383,
  serialized_end=435,
)

_SERVERSTREAMINGECHOREQUEST.fields_by_name['message_interval'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['EchoRequest'] = _ECHOREQUEST
DESCRIPTOR.message_types_by_name['EchoResponse'] = _ECHORESPONSE
DESCRIPTOR.message_types_by_name['ServerStreamingEchoRequest'] = _SERVERSTREAMINGECHOREQUEST
DESCRIPTOR.message_types_by_name['ServerStreamingEchoResponse'] = _SERVERSTREAMINGECHORESPONSE
DESCRIPTOR.message_types_by_name['ClientStreamingEchoRequest'] = _CLIENTSTREAMINGECHOREQUEST
DESCRIPTOR.message_types_by_name['ClientStreamingEchoResponse'] = _CLIENTSTREAMINGECHORESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:grpc.gateway.testing.Empty)
  ))
_sym_db.RegisterMessage(Empty)

EchoRequest = _reflection.GeneratedProtocolMessageType('EchoRequest', (_message.Message,), dict(
  DESCRIPTOR = _ECHOREQUEST,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:grpc.gateway.testing.EchoRequest)
  ))
_sym_db.RegisterMessage(EchoRequest)

EchoResponse = _reflection.GeneratedProtocolMessageType('EchoResponse', (_message.Message,), dict(
  DESCRIPTOR = _ECHORESPONSE,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:grpc.gateway.testing.EchoResponse)
  ))
_sym_db.RegisterMessage(EchoResponse)

ServerStreamingEchoRequest = _reflection.GeneratedProtocolMessageType('ServerStreamingEchoRequest', (_message.Message,), dict(
  DESCRIPTOR = _SERVERSTREAMINGECHOREQUEST,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:grpc.gateway.testing.ServerStreamingEchoRequest)
  ))
_sym_db.RegisterMessage(ServerStreamingEchoRequest)

ServerStreamingEchoResponse = _reflection.GeneratedProtocolMessageType('ServerStreamingEchoResponse', (_message.Message,), dict(
  DESCRIPTOR = _SERVERSTREAMINGECHORESPONSE,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:grpc.gateway.testing.ServerStreamingEchoResponse)
  ))
_sym_db.RegisterMessage(ServerStreamingEchoResponse)

ClientStreamingEchoRequest = _reflection.GeneratedProtocolMessageType('ClientStreamingEchoRequest', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTSTREAMINGECHOREQUEST,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:grpc.gateway.testing.ClientStreamingEchoRequest)
  ))
_sym_db.RegisterMessage(ClientStreamingEchoRequest)

ClientStreamingEchoResponse = _reflection.GeneratedProtocolMessageType('ClientStreamingEchoResponse', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTSTREAMINGECHORESPONSE,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:grpc.gateway.testing.ClientStreamingEchoResponse)
  ))
_sym_db.RegisterMessage(ClientStreamingEchoResponse)



_ECHOSERVICE = _descriptor.ServiceDescriptor(
  name='EchoService',
  full_name='grpc.gateway.testing.EchoService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=438,
  serialized_end=1254,
  methods=[
  _descriptor.MethodDescriptor(
    name='Echo',
    full_name='grpc.gateway.testing.EchoService.Echo',
    index=0,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='EchoAbort',
    full_name='grpc.gateway.testing.EchoService.EchoAbort',
    index=1,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NoOp',
    full_name='grpc.gateway.testing.EchoService.NoOp',
    index=2,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ServerStreamingEcho',
    full_name='grpc.gateway.testing.EchoService.ServerStreamingEcho',
    index=3,
    containing_service=None,
    input_type=_SERVERSTREAMINGECHOREQUEST,
    output_type=_SERVERSTREAMINGECHORESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ServerStreamingEchoAbort',
    full_name='grpc.gateway.testing.EchoService.ServerStreamingEchoAbort',
    index=4,
    containing_service=None,
    input_type=_SERVERSTREAMINGECHOREQUEST,
    output_type=_SERVERSTREAMINGECHORESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ClientStreamingEcho',
    full_name='grpc.gateway.testing.EchoService.ClientStreamingEcho',
    index=5,
    containing_service=None,
    input_type=_CLIENTSTREAMINGECHOREQUEST,
    output_type=_CLIENTSTREAMINGECHORESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='FullDuplexEcho',
    full_name='grpc.gateway.testing.EchoService.FullDuplexEcho',
    index=6,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='HalfDuplexEcho',
    full_name='grpc.gateway.testing.EchoService.HalfDuplexEcho',
    index=7,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ECHOSERVICE)

DESCRIPTOR.services_by_name['EchoService'] = _ECHOSERVICE

# @@protoc_insertion_point(module_scope)
